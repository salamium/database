[selection]
pattern = "public function createSelectionInstance($table = null)
          {
          return new self($this->context, $this->conventions, $table ?: $this->name, $this->cache ? $this->cache->getStorage() : null);
          }"
method = createSelectionInstance

[groupedSelection]
pattern = "protected function createGroupedSelectionInstance($table, $column)
          {
          return new GroupedSelection($this->context, $this->conventions, $table, $column, $this, $this->cache ? $this->cache->getStorage() : null);
          }"
method = createGroupedSelectionInstance

[activeRow]
pattern = "protected function createRow(array $row)
          {
          return new ActiveRow($row, $this);
          }"
method = createActiveRow